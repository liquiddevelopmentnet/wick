// Generated from /home/fb/projects/wick/grammar/WickLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class WickLexer extends Lexer {
	public static readonly StringLiteral = 1;
	public static readonly IntegerLiteral = 2;
	public static readonly DoubleLiteral = 3;
	public static readonly BooleanLiteral = 4;
	public static readonly GenericLiteral = 5;
	public static readonly DOUBLE_QUOTE = 6;
	public static readonly SINGLE_QUOTE = 7;
	public static readonly LBRACE = 8;
	public static readonly RBRACE = 9;
	public static readonly VARIABLE_PREFIX = 10;
	public static readonly SEMICOLON = 11;
	public static readonly NL = 12;
	public static readonly WHITESPACE = 13;
	public static readonly COMMENT = 14;
	public static readonly LINE_COMMENT = 15;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"StringLiteral", "IntegerLiteral", "DoubleLiteral", "BooleanLiteral", 
		"GenericLiteral", "DoubleQuotedString", "SingleQuotedString", "HexDigit", 
		"DoubleQuotedStringCharacter", "SingleQuotedStringCharacter", "EscapeSequence", 
		"UnicodeEscape", "DOUBLE_QUOTE", "SINGLE_QUOTE", "LBRACE", "RBRACE", "VARIABLE_PREFIX", 
		"SEMICOLON", "NL", "WHITESPACE", "COMMENT", "LINE_COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, "'\"'", 
		"'''", "'{'", "'}'", "'$'", "';'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "StringLiteral", "IntegerLiteral", "DoubleLiteral", "BooleanLiteral", 
		"GenericLiteral", "DOUBLE_QUOTE", "SINGLE_QUOTE", "LBRACE", "RBRACE", 
		"VARIABLE_PREFIX", "SEMICOLON", "NL", "WHITESPACE", "COMMENT", "LINE_COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(WickLexer._LITERAL_NAMES, WickLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return WickLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(WickLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "WickLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return WickLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return WickLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return WickLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return WickLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x11\xB5\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x03\x02\x03\x02\x05\x022\n\x02\x03\x03\x06\x035\n\x03\r\x03\x0E\x03" +
		"6\x03\x04\x06\x04:\n\x04\r\x04\x0E\x04;\x03\x04\x03\x04\x07\x04@\n\x04" +
		"\f\x04\x0E\x04C\v\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05" +
		"\x03\x05\x03\x05\x03\x05\x05\x05N\n\x05\x03\x06\x06\x06Q\n\x06\r\x06\x0E" +
		"\x06R\x03\x07\x03\x07\x07\x07W\n\x07\f\x07\x0E\x07Z\v\x07\x03\x07\x03" +
		"\x07\x03\b\x03\b\x07\b`\n\b\f\b\x0E\bc\v\b\x03\b\x03\b\x03\t\x03\t\x03" +
		"\n\x03\n\x05\nk\n\n\x03\v\x03\v\x05\vo\n\v\x03\f\x03\f\x03\f\x05\ft\n" +
		"\f\x03\r\x03\r\x06\rx\n\r\r\r\x0E\ry\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03" +
		"\x12\x03\x13\x03\x13\x03\x14\x05\x14\x8E\n\x14\x03\x14\x03\x14\x06\x14" +
		"\x92\n\x14\r\x14\x0E\x14\x93\x03\x15\x06\x15\x97\n\x15\r\x15\x0E\x15\x98" +
		"\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x07\x16\xA1\n\x16\f\x16" +
		"\x0E\x16\xA4\v\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03" +
		"\x17\x03\x17\x03\x17\x07\x17\xAF\n\x17\f\x17\x0E\x17\xB2\v\x17\x03\x17" +
		"\x03\x17\x03\xA2\x02\x02\x18\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
		"\x06\v\x02\x07\r\x02\x02\x0F\x02\x02\x11\x02\x02\x13\x02\x02\x15\x02\x02" +
		"\x17\x02\x02\x19\x02\x02\x1B\x02\b\x1D\x02\t\x1F\x02\n!\x02\v#\x02\f%" +
		"\x02\r\'\x02\x0E)\x02\x0F+\x02\x10-\x02\x11\x03\x02\t\x03\x022;\b\x02" +
		"%%//1;C\\aac|\x05\x022;CHch\x06\x02\f\f\x0F\x0F$$^^\n\x02$$))^^ddhhpp" +
		"ttvv\x04\x02\v\v\"\"\x04\x02\f\f\x0F\x0F\x02\xBF\x02\x03\x03\x02\x02\x02" +
		"\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02" +
		"\x02\v\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x031\x03\x02\x02\x02\x054\x03\x02\x02" +
		"\x02\x079\x03\x02\x02\x02\tM\x03\x02\x02\x02\vP\x03\x02\x02\x02\rT\x03" +
		"\x02\x02\x02\x0F]\x03\x02\x02\x02\x11f\x03\x02\x02\x02\x13j\x03\x02\x02" +
		"\x02\x15n\x03\x02\x02\x02\x17s\x03\x02\x02\x02\x19u\x03\x02\x02\x02\x1B" +
		"\x80\x03\x02\x02\x02\x1D\x82\x03\x02\x02\x02\x1F\x84\x03\x02\x02\x02!" +
		"\x86\x03\x02\x02\x02#\x88\x03\x02\x02\x02%\x8A\x03\x02\x02\x02\'\x91\x03" +
		"\x02\x02\x02)\x96\x03\x02\x02\x02+\x9C\x03\x02\x02\x02-\xAA\x03\x02\x02" +
		"\x02/2\x05\r\x07\x0202\x05\x0F\b\x021/\x03\x02\x02\x0210\x03\x02\x02\x02" +
		"2\x04\x03\x02\x02\x0235\t\x02\x02\x0243\x03\x02\x02\x0256\x03\x02\x02" +
		"\x0264\x03\x02\x02\x0267\x03\x02\x02\x027\x06\x03\x02\x02\x028:\t\x02" +
		"\x02\x0298\x03\x02\x02\x02:;\x03\x02\x02\x02;9\x03\x02\x02\x02;<\x03\x02" +
		"\x02\x02<=\x03\x02\x02\x02=A\x070\x02\x02>@\t\x02\x02\x02?>\x03\x02\x02" +
		"\x02@C\x03\x02\x02\x02A?\x03\x02\x02\x02AB\x03\x02\x02\x02B\b\x03\x02" +
		"\x02\x02CA\x03\x02\x02\x02DE\x07v\x02\x02EF\x07t\x02\x02FG\x07w\x02\x02" +
		"GN\x07g\x02\x02HI\x07h\x02\x02IJ\x07c\x02\x02JK\x07n\x02\x02KL\x07u\x02" +
		"\x02LN\x07g\x02\x02MD\x03\x02\x02\x02MH\x03\x02\x02\x02N\n\x03\x02\x02" +
		"\x02OQ\t\x03\x02\x02PO\x03\x02\x02\x02QR\x03\x02\x02\x02RP\x03\x02\x02" +
		"\x02RS\x03\x02\x02\x02S\f\x03\x02\x02\x02TX\x05\x1B\x0E\x02UW\x05\x13" +
		"\n\x02VU\x03\x02\x02\x02WZ\x03\x02\x02\x02XV\x03\x02\x02\x02XY\x03\x02" +
		"\x02\x02Y[\x03\x02\x02\x02ZX\x03\x02\x02\x02[\\\x05\x1B\x0E\x02\\\x0E" +
		"\x03\x02\x02\x02]a\x05\x1D\x0F\x02^`\x05\x15\v\x02_^\x03\x02\x02\x02`" +
		"c\x03\x02\x02\x02a_\x03\x02\x02\x02ab\x03\x02\x02\x02bd\x03\x02\x02\x02" +
		"ca\x03\x02\x02\x02de\x05\x1D\x0F\x02e\x10\x03\x02\x02\x02fg\t\x04\x02" +
		"\x02g\x12\x03\x02\x02\x02hk\n\x05\x02\x02ik\x05\x17\f\x02jh\x03\x02\x02" +
		"\x02ji\x03\x02\x02\x02k\x14\x03\x02\x02\x02lo\n\x05\x02\x02mo\x05\x17" +
		"\f\x02nl\x03\x02\x02\x02nm\x03\x02\x02\x02o\x16\x03\x02\x02\x02pq\x07" +
		"^\x02\x02qt\t\x06\x02\x02rt\x05\x19\r\x02sp\x03\x02\x02\x02sr\x03\x02" +
		"\x02\x02t\x18\x03\x02\x02\x02uw\x07^\x02\x02vx\x07w\x02\x02wv\x03\x02" +
		"\x02\x02xy\x03\x02\x02\x02yw\x03\x02\x02\x02yz\x03\x02\x02\x02z{\x03\x02" +
		"\x02\x02{|\x05\x11\t\x02|}\x05\x11\t\x02}~\x05\x11\t\x02~\x7F\x05\x11" +
		"\t\x02\x7F\x1A\x03\x02\x02\x02\x80\x81\x07$\x02\x02\x81\x1C\x03\x02\x02" +
		"\x02\x82\x83\x07)\x02\x02\x83\x1E\x03\x02\x02\x02\x84\x85\x07}\x02\x02" +
		"\x85 \x03\x02\x02\x02\x86\x87\x07\x7F\x02\x02\x87\"\x03\x02\x02\x02\x88" +
		"\x89\x07&\x02\x02\x89$\x03\x02\x02\x02\x8A\x8B\x07=\x02\x02\x8B&\x03\x02" +
		"\x02\x02\x8C\x8E\x07\x0F\x02\x02\x8D\x8C\x03\x02\x02\x02\x8D\x8E\x03\x02" +
		"\x02\x02\x8E\x8F\x03\x02\x02\x02\x8F\x92\x07\f\x02\x02\x90\x92\x07\x0F" +
		"\x02\x02\x91\x8D\x03\x02\x02\x02\x91\x90\x03\x02\x02\x02\x92\x93\x03\x02" +
		"\x02\x02\x93\x91\x03\x02\x02\x02\x93\x94\x03\x02\x02\x02\x94(\x03\x02" +
		"\x02\x02\x95\x97\t\x07\x02\x02\x96\x95\x03\x02\x02\x02\x97\x98\x03\x02" +
		"\x02\x02\x98\x96\x03\x02\x02\x02\x98\x99\x03\x02\x02\x02\x99\x9A\x03\x02" +
		"\x02\x02\x9A\x9B\b\x15\x02\x02\x9B*\x03\x02\x02\x02\x9C\x9D\x071\x02\x02" +
		"\x9D\x9E\x07,\x02\x02\x9E\xA2\x03\x02\x02\x02\x9F\xA1\v\x02\x02\x02\xA0" +
		"\x9F\x03\x02\x02\x02\xA1\xA4\x03\x02\x02\x02\xA2\xA3\x03\x02\x02\x02\xA2" +
		"\xA0\x03\x02\x02\x02\xA3\xA5\x03\x02\x02\x02\xA4\xA2\x03\x02\x02\x02\xA5" +
		"\xA6\x07,\x02\x02\xA6\xA7\x071\x02\x02\xA7\xA8\x03\x02\x02\x02\xA8\xA9" +
		"\b\x16\x02\x02\xA9,\x03\x02\x02\x02\xAA\xAB\x071\x02\x02\xAB\xAC\x071" +
		"\x02\x02\xAC\xB0\x03\x02\x02\x02\xAD\xAF\n\b\x02\x02\xAE\xAD\x03\x02\x02" +
		"\x02\xAF\xB2\x03\x02\x02\x02\xB0\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02\x02" +
		"\x02\xB1\xB3\x03\x02\x02\x02\xB2\xB0\x03\x02\x02\x02\xB3\xB4\b\x17\x02" +
		"\x02\xB4.\x03\x02\x02\x02\x15\x0216;AMRXajnsy\x8D\x91\x93\x98\xA2\xB0" +
		"\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!WickLexer.__ATN) {
			WickLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(WickLexer._serializedATN));
		}

		return WickLexer.__ATN;
	}

}

